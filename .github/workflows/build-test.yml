name: 'Build Test'
on: # rebuild any PRs and main branch changes
  pull_request:
    paths-ignore:
      - '**.md'
  push:
    branches:
      - main
      - releases/*
    paths-ignore:
      - '**.md'

jobs:
  stylelint:
    name: 'Style Lint'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ '15' ]
    steps:
      - uses: actions/checkout@v2.3.4

      - name: Setup Node ${{ matrix.node }}
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{ matrix.node }}

      - uses: actions/cache@v2.1.6
        id: node-modules-cache
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn

      - name: Install package.json dependencies with Yarn
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
          HUSKY_SKIP_INSTALL: true

      - run: yarn lint:style

  eslint:
    name: 'Eslint'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ '15' ]
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 1

      - name: Setup Node ${{ matrix.node }}
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{ matrix.node }}

      - uses: actions/cache@v2.1.6
        id: node-modules-cache
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn

      - name: Install package.json dependencies with Yarn
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
          HUSKY_SKIP_INSTALL: true

      - run: yarn lint

  build:
    name: 'Build Test'
    needs: [ 'tests' ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ '15' ]
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Setup Node ${{ matrix.node }}
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{ matrix.node }}

      - uses: actions/cache@v2.1.6
        id: node-modules-cache
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn

      - name: Install package.json dependencies with Yarn
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
          HUSKY_SKIP_INSTALL: true

      - run: yarn build-prod

  tests:
    name: 'Tests'
    needs: [ 'stylelint', 'eslint' ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ '15' ]
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Setup Node ${{ matrix.node }}
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{ matrix.node }}

      - uses: actions/cache@v2.1.6
        id: node-modules-cache
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn

      - name: Install package.json dependencies with Yarn
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
          HUSKY_SKIP_INSTALL: true