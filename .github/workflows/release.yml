name: Production

on:
  workflow_run:
    workflows: [ "Semantic Release" ]
    types: [ completed ]
  workflow_dispatch:
    inputs:
      version:
        required: false
        description: 'Version (eg. v2.5.0)'
        default: latest

jobs:
  cos:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ '15' ]
    timeout-minutes: 7

    name: Deploy static files to COS
    steps:
      - name: Checkout Latest Stable Version
        if: ${{ github.event.inputs.version }} == 'latest'
        uses: actions/checkout@v3

      - name: Checkout ${{ github.event.inputs.version }}
        if: github.event.inputs.version != 'latest'
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.version }}

      - name: Setup Node ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - uses: actions/cache@v2.1.7
        id: node-modules-cache
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn

      - name: Install package.json dependencies with Yarn
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
          HUSKY_SKIP_INSTALL: true

      - name: Cache dist
        id: cache-dist
        uses: actions/cache@v2.1.7
        with:
          path: ./dist
          key: BUILD-ID-${{ github.run_id }}

      - name: Build
        if: steps.cache-dist.outputs.cache-hit != 'true'
        run: yarn build-prod

      - name: Deploy static to Tencent CloudBase
        id: deployStatic
        uses: TencentCloudBase/cloudbase-action@v2
        with:
          secretId: ${{ secrets.TENCENTCLOUD_CLOUDBASE_SECRET_ID }}
          secretKey: ${{ secrets.TENCENTCLOUD_CLOUDBASE_SECRET_KEY }}
          envId: ${{ secrets.ENV_ID }}

      - name: Setup Serverless
        uses: teakowa/setup-serverless@v2
        with:
          provider: tencent
        env:
          TENCENT_APPID: ${{ secrets.TENCENTCLOUD_APP_ID }}
          TENCENT_SECRET_ID: ${{ secrets.TENCENTCLOUD_SLS_SECRET_ID }}
          TENCENT_SECRET_KEY: ${{ secrets.TENCENTCLOUD_SLS_SECRET_KEY}}
          SERVERLESS_PLATFORM_VENDOR: tencent

      - name: Deploy static files to COS
        run: sls deploy
        working-directory: ./cos

  cdn:
    runs-on: ubuntu-latest
    needs:
      - cos
    strategy:
      matrix:
        node: [ '15' ]

    name: Publish to  CDN
    steps:
      - name: Checkout Latest Stable Version
        if: ${{ github.event.inputs.version }} == 'latest'
        uses: actions/checkout@v3

      - name: Checkout ${{ github.event.inputs.version }}
        if: github.event.inputs.version != 'latest'
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.version }}

      - name: Setup Serverless
        uses: teakowa/setup-serverless@v2
        with:
          provider: tencent
        env:
          TENCENT_APPID: ${{ secrets.TENCENTCLOUD_APP_ID }}
          TENCENT_SECRET_ID: ${{ secrets.TENCENTCLOUD_SLS_SECRET_ID }}
          TENCENT_SECRET_KEY: ${{ secrets.TENCENTCLOUD_SLS_SECRET_KEY}}
          SERVERLESS_PLATFORM_VENDOR: tencent

      - name: Refresh CDN
        run: sls deploy
        working-directory: ./cdn

      - name: Slack Notification
        if: success()
        uses: tokorom/action-slack-incoming-webhook@v1.1.4
        env:
          INCOMING_WEBHOOK_URL: ${{ secrets.CI_DEPLOY_WEBHOOK }}
        with:
          text: Successful deploy of ${{ github.repository }}
          attachments: |
            [
              {
                "color": "good",
                "author_name": "${{ github.actor }}",
                "author_icon": "${{ github.event.sender.avatar_url }}",
                "title": "${{ github.event.head_commit.message }}",
                "title_link": "${{ github.event.repository.url }}/commit/${{ github.sha }}",
                "text": "查看 Workflow <${{ github.event.repository.url }}/actions/runs/${{ github.run_id }}|构建日志>",
                "fields": [
                  {
                    "title": "Compare URL",
                    "value": "${{ github.event.compare }}"
                  }
                ]
              }
            ]
      - name: Slack Notification
        if: failure()
        uses: tokorom/action-slack-incoming-webhook@v1.1.4
        env:
          INCOMING_WEBHOOK_URL: ${{ secrets.CI_DEPLOY_WEBHOOK }}
        with:
          text: Failures deploy of ${{ github.repository }}
          attachments: |
            [
              {
                "color": "danger",
                "author_name": "${{ github.actor }}",
                "author_icon": "${{ github.event.sender.avatar_url }}",
                "title": "${{ github.event.head_commit.message }}",
                "title_link": "${{ github.event.repository.url }}/commit/${{ github.sha }}",
                "text": "查看 Workflow <${{ github.event.repository.url }}/actions/runs/${{ github.run_id }}|构建日志>",
                "fields": [
                  {
                    "title": "Compare URL",
                    "value": "${{ github.event.compare }}"
                  }
                ]
              }
            ]
